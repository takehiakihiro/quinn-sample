[package]
name = "quinn-sample"
version = "0.1.0"
edition = "2021"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[features]
# default = ["log", "platform-verifier", "ring", "runtime-tokio", "rustls"]
default = ["log", "runtime-tokio", "rustls"]
# Records how long locks are held, and warns if they are held >= 1ms
# lock_tracking = []
# Provides `ClientConfig::with_platform_verifier()` convenience method
# platform-verifier = ["proto/platform-verifier"]
rustls = ["proto/rustls", "proto/ring"]
# Enables `Endpoint::client` and `Endpoint::server` conveniences
# ring = ["proto/ring"]
runtime-tokio = ["tokio/time", "tokio/rt", "tokio/net"]
# runtime-async-std = ["async-io", "async-std"]
# runtime-smol = ["async-io", "smol"]

# Write logs via the `log` crate when no `tracing` subscriber exists
log = ["tracing/log", "proto/log", "udp/log"]

[dependencies]
anyhow = "1.0.22"
async-io = { version = "2.0", optional = true }
async-std = { version = "1.11", optional = true }
bytes = "1"
clap = { version = "4", features = ["derive"] }
directories-next = "2"
# Enables futures::io::{AsyncRead, AsyncWrite} support for streams
futures-io = { version = "0.3.19", optional = true }
rustc-hash = "1.1"
pin-project-lite = "0.2"
proto = { package = "quinn-proto", version = "0.11.2", default-features = false }
quinn = "0.11"
rcgen = "0.13"
rustls = { version = "0.23", default-features = false, features = ["ring", "std"] }
# rustls = { version = "0.23", features = ["aws_lc_rs", "std"] }
rustls-pemfile = "2"
smol = { version = "2", optional = true }
thiserror = "1.0.21"
tracing = "0.1.10"
tracing-subscriber = { version = "0.3.0", default-features = false, features = ["env-filter", "fmt", "ansi", "time", "local-time"] }
tracing-futures = { version = "0.2.0", default-features = false, features = ["std-future"] }
tokio = { version = "1", features = ["full"] }
udp = { package = "quinn-udp", version = "0.5", default-features = false }
url = "2"

[[bin]]
name = "server"

[[bin]]
name = "client"
